/*

Flume uses Thrift interface definition language that can be used to generate thrift clients in any language that thrift supports.

can be configured using :
type
bind
port
threads

flume(1.4.0) by default, is built against and includes thrift version (0.7.0). This was meant to support clients that would also write to hbase verion 0.92(or older) from the same process.

when using a versio of thrift lower than 0.8.0, flume uses thrift's TTHREADPOOL server, which uses one thread per client , and the threads parameter controls the maximum threads that source will create, thus indirectly controlling the number of clients that can connect to the agent. **IT IS RECOMMENDED NOT TO USE THIS PARAMETER AND CAN BE USED TO KEEP THE RESOURCE UTILIZATION UNDER CONTROL**

If a newer version of Thrift is being used, then Flume
uses Thrift’s TThreadedSelectorServer , which uses Java’s nonblocking I/O and
therefore can support more clients than there are threads available.


Thrift source unlike avro source does not support compression or SSL. 
A Thrift Source should therefore be used only to push data into Flume from
systems that are written in non-JVM languages,

For Flume agent–to–Flume agent
communication, it is recommended that the Avro Sink–Avro Source pair be used.
*/

// configuration of thrift Source
agent.sources = sourceName
agent.channels = channelName

agent.sources.sourceName.type = thrift
agent.sources.sourceName.channels = channelName

agent.sources.sourceName.bind = 0.0.0.0
agent.sources.sourceName.port = 4564

agent.channels.channelName.type = memory


// thrift sink that writes to this source would be :
agent.channels = channelName
agent.sinks = sinkName

agent.channels.channelName.type = memory

agent.sinks.sinkName.type = thrift
agent.sinks.sinkName.channel = memory
agent.sinks.sinkName.hostname = thriftsrchost.example.com
agent.sinks.sinkName.port = 4564








