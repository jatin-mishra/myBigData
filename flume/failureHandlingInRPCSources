Rpc Sources are invoked by a client or sink on the other side of a network link, though it looks 
like a local method call. In all cases where RPC sources cannot start due to some permanent error,
like being unable to bind to the port, the source will throw an exception when it tries to start.
Since flume's configuration system retry every few seconds to restart the component, since it was
successfully configured, source will start up if the condition causing the error no longer exists.
for example: if the other process that was bound to the port was killed or released the port.

If even one of the channel gets filled or if transaction is too large then source will throw 
ChannelException and returns a failure status to client or sink that called it and expect it to 
retry.Since Rpc sources receives data via threads owned by a thread pool, exception would simply
cause the thread to die.

In all such cases, the real indication of failure is only in the log files where these
exceptions are logged. Sometimes these exceptions may indicate a major problem,
like the process running out of resources (as with an OutOfMemoryError ). Therefore,
it is important to monitor the logs generated by the Flume agent to ensure that things
are running smoothly.

ChannelException is being thrown too often can mean :
1. channels are too underallocated for the rate of writes or
2. sinks are not clearing the data from the channels fast enough

Increasing the number of sinks can help if too few sinks are reading the data, but if the 
eventual destination itself cannot handle the load, the capacity needs to be rethought.

Errors may cause duplicates but never actually cause data loss, since events are removed from 
the channel if and only if the data is actually successfully written out to the next hop.
